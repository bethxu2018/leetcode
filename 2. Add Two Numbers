# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        flag = 0
        fun = lambda x, y: x + y
        head = tem = ListNode(-1)
        while l1 or l2:
            if l1 and l2:
                val = fun(l1.val, l2.val)
                l1 = l1.next
                l2 = l2.next
            elif l1:
                val = l1.val
                l1 = l1.next
            else:
                val = l2.val
                l2 = l2.next
            if val + flag < 10:
                tem.next = ListNode(val + flag)
                flag_next = 0
            else:
                tem.next = ListNode((val + flag)%10)
                flag_next = 1
            flag =flag_next
            tem = tem.next
        
        if flag ==1:
            tem.next =ListNode(1)
        
        return head.next
        
        
            
        
