题目描述
请将给出的整数转化为罗马数字
保证输入数字的范围在1 到 3999之间。

Given an integer, convert it to a roman numeral.
Input is guaranteed to be within the range from 1 to 3999.


#阿拉伯数字to罗马数字
class Solution:
    def intToRoman(self , num ):
        num_list = [1000,900,500,400,100,90,50,40,10,9,5,4,1]
        roman_code = ["M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"]
        result = ''
        for i in range(len(num_list)):
            while  num >=num_list[i]:
                num -= num_list[i]
                result +=roman_code[i]
        return result
            
            
           
题目描述
请将给出的罗马数字转化为整数
保证输入的数字范围在1 到 3999之间。

Given a roman numeral, convert it to an integer.
Input is guaranteed to be within the range from 1 to 3999.

#
# 
# @param s string字符串 
# @return int整型
#
class Solution:
    def romanToInt(self , s ):
        roman_code ={
            "I":1,"V":5,"X":10,"L":50,"C":100,"D":500,"M":1000
        }
        result = 0
        if s =="0":
            return result
        else:
            for i in range(len(s)):
                if i==0 or roman_code[s[i]]<=roman_code[s[i-1]]:
                    result+=roman_code[s[i]]
                else:
                    result += roman_code[s[i]]-2*roman_code[s[i-1]]
            return result
                
        # write code here
            
