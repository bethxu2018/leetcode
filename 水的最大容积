给定n个非负整数a1，a2，…，an，其中每个数字表示坐标(i, ai)处的一个点。以（i，ai）和（i，0）（i=1,2,3...n）为端点画出n条直线。你可以从中选择两条线与x轴一起构成一个容器，最大的容器能装多少水？
注意：你不能倾斜容器

例如：
输入 [1,8,6,2,5,4,8,3,7]
输出: 49


#
# 
# @param height int整型一维数组 
# @return int整型
#
class Solution:
    def maxArea(self , height ):
        max_contain=0
        if len(height)<=1:
            return 0
        
        i=0
        j=len(height)-1
        while(i<j):
            w = j-i
            if height[i]<=height[j]:
                tmp_contain = w*height[i]
                i+=1
            else:
                tmp_contain = w*height[j]
                j-=1
            if tmp_contain>=max_contain:
                max_contain=tmp_contain
        return max_contain
            
                
            
        # write code here
