题目描述
输入一个整形数组（可能有正数和负数），求数组中连续子数组（最少有一个元素）的最大和。要求时间复杂度为O(n)。

输入描述:
【重要】第一行为数组的长度N（N>=1）

接下来N行，每行一个数，代表数组的N个元素
输出描述:
最大和的结果


def get_max_substr(numbers):
    max_value = min(numbers)
    nvalue = 0
    tmp_max = 0
    for i in range(len(numbers)):
        if tmp_max<=0:
            tmp_max = numbers[i]
        else:
            tmp_max += numbers[i]
        if max_value<=tmp_max:
            max_value=tmp_max

    print(max_value)


if __name__=="__main__":
    len_num = int(input())
    nums =[]
    for i in range(len_num):
        nums.append(int(input()))
    get_max_substr(nums)
